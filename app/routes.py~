from flask import render_template, request, jsonify
from app import app
from app.utils import fetch_match_data, preprocess_match_data
from app.analysis import analyze_match
import logging

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/analyze', methods=['POST'])
def analyze():
    match_id = request.form.get('match_id')
    app.logger.debug(f"Received match_id: {match_id}")

    if not match_id:
        app.logger.error("No match_id provided")
        return jsonify({'error': 'Match ID not provided'}), 400

    match_data = fetch_match_data(match_id)
    if match_data is None:
        app.logger.error(f"Failed to fetch match data for match_id: {match_id}")
        return jsonify({'error': 'Failed to fetch match data'}), 500

    app.logger.debug(f"Fetched match data: {match_data}")
    preprocessed_data = preprocess_match_data(match_data)
    if preprocessed_data is None:
        app.logger.error(f"Preprocessing failed for match_data: {match_data}")
        return jsonify({'error': 'Preprocessing failed'}), 500

    app.logger.debug(f"Preprocessed data: {preprocessed_data}")
    analysis_result = analyze_match(match_data)
    if 'error' in analysis_result:
        app.logger.error(f"Analysis failed: {analysis_result}")
        return jsonify({'error': analysis_result['error']}), 500

    return jsonify(analysis_result)
